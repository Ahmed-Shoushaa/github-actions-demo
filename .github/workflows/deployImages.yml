name: Mimic fgs

on:
  push:
    branches: [main]

env:
  # GitHub Container Registry
  REGISTRY: ghcr.io
  IMAGE_NAME: store

  # Oracle Cloud Infrastructure Registry (OCIR)
  OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
  OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
  OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
  OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
  OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}

jobs:
  build:
    name: Build Docker
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Create .env.local file
        run: |
          touch .env.local
          echo "REVALIDATE_TOKEN=${{ secrets.REVALIDATE_TOKEN }}" >> .env.local
          echo "NEXT_PUBLIC_APP_SERVER_GRAPHQL=${{ secrets.NEXT_PUBLIC_APP_SERVER_GRAPHQL }}" >> .env.local
          echo "NEXT_PUBLIC_APP_SERVER_URL=${{ secrets.NEXT_PUBLIC_APP_SERVER_URL }}" >> .env.local
          echo "NEXT_PUBLIC_APP_BUCKET_STORAGE=${{ secrets.NEXT_PUBLIC_APP_BUCKET_STORAGE }}" >> .env.local

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.PAT_TOKEN}}

      - name: Log into OCIR
        uses: oracle-actions/login-ocir@v1.3.0
        id: login-ocir
        with:
          auth_token: ${{ secrets.OCI_AUTH_TOKEN }}

      - name: Get or create an OCIR Repository
        uses: oracle-actions/get-ocir-repository@v1.3.0
        id: get-ocir-repository
        with:
          name: store
          compartment: ${{ secrets.OCI_COMPARTMENT_OCID }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: 'Build Inventory Image'
      #   run: |
      #     docker build . --tag ghcr.io/ahmed-shoushaa/store:latest
      #     docker push ghcr.io/ahmed-shoushaa/store:latest
      #     docker pull ghcr.io/ahmed-shoushaa/store:latest
      #     docker images

      # - name: Tag and push a container image
      #   id: tag-and-push-image
      #   run: |
      #     docker tag ghcr.io/ahmed-shoushaa/store:latest fra.ocir.io/frxpd492cljs/store:latest
      #     docker push fra.ocir.io/frxpd492cljs/store:latest
